version: "3"

services:

  kong-database:
    image: postgres:9.6
    container_name: kong-database
    restart: always
    environment:
      - POSTGRES_USER=kong
      - POSTGRES_PASSWORD=kong
      - POSTGRES_DB=kong
    volumes:
      - /gateway/postgresql/data:/var/lib/postgresql/data
    networks:
      - kong-net
    ports:
      - 5432:5432
  
  kong-migration:
    depends_on:
      - kong-database
    image: kong:2.1.2
    container_name: kong-migration
    restart: on-failure
    environment:
      - KONG_DATABASE=postgres
      - KONG_PG_HOST=kong-database
      - KONG_PG_DATABASE=kong
      - KONG_PG_USER=kong
      - KONG_PG_PASSWORD=kong
    command: "kong migrations bootstrap"
    links:
      - kong-database

  kong:
    depends_on:
      - kong-database
    image: kong:2.1.2
    container_name: kong
    restart: always
    environment:
      - KONG_DATABASE=postgres
      - KONG_PG_USER=kong
      - KONG_PG_PASSWORD=kong
      - KONG_PG_HOST=kong-database
      - KONG_CASSANDRA_CONTACT_POINTS=kong-database
      - KONG_PROXY_ACCESS_LOG=/dev/stdout
      - KONG_ADMIN_ACCESS_LOG=/dev/stdout
      - KONG_PROXY_ERROR_LOG=/dev/stderr
      - KONG_ADMIN_ERROR_LOG=/dev/stderr
      - KONG_ADMIN_LISTEN=0.0.0.0:8001, 0.0.0.0:8444 ssl
    volumes:
      - kong-volume
    networks:
      - kong-net
    ports:
      - 8000:8000
      - 8443:8443
      - 8001:8001
      - 8444:8444

  konga-prepare:
    depends_on:
      - kong-database
    image: pantsel/konga:0.14.9
    container_name: konga-prepare
    restart: on-failure
    command: "-c prepare -a postgres -u postgresql://kong:kong@kong-database:5432/konga_db"
    networks:
      - kong-net
    links:
      - kong-database

  konga:
    depends_on:
      - kong-database
    image: pantsel/konga:0.14.9
    container_name: konga
    restart: always
    environment:
      - DB_ADAPTER=postgres
      - DB_HOST=kong-database
      - DB_USER=kong
      - DB_PASSWORD=kong
      - DB_DATABASE=konga_db
      - KONGA_HOOK_TIMEOUT=120000
      - NODE_ENV=production
      - TOKEN_SECRET=km1GUr4RkcQD7DewhJPNXrCuZwcKmqjb
    networks:
      - kong-net
    ports:
      - 1337:1337

  elasticsearch:
    depends_on:
      - kong
    image: docker.elastic.co/elasticsearch/elasticsearch:7.8.0
    container_name: elasticsearch
    restart: always
    environment: 
      - discovery.type=single-node
    ports: 
      - 9200:9200
 
  kibana:
    depends_on:
      - elasticsearch
    image: docker.elastic.co/kibana/kibana:7.8.0
    container_name: kibana
    restart: always
    environment: 
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
    ports: 
      - 5601:5601

  kong-http-log-server:
    depends_on:
      - kibana
    build: /gateway/
    image: domecloud/kong-http-log-server
    container_name: kong-http-log-server
    restart: always
    volumes: 
      - /gateway/.env:/app/.env
    ports:
      - 8080:8080

  prometheus:
    depends_on:
      - kong
    image: prom/prometheus:v2.20.1
    container_name: prometheus
    restart: always
    volumes:
      - /gateway/prometheus.yml:/etc/prometheus/prometheus.yml
      - /gateway/prometheus/data:/promtheus
    command:
     - '--config.file=/etc/prometheus/prometheus.yml'
    ports:
      - 9090:9090

  node_exporter:
    depends_on:
      - prometheus
    image: prom/node-exporter:v1.0.1
    container_name: node_exporter
    restart: always
    ports:
      - 9100:9100

networks:
  kong-net:
    driver: bridge

volumes:
  kong-volume: